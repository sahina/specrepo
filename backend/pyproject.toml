[project]
name = "specrepo-backend"
version = "0.1.0"
description = "SpecRepo API Lifecycle Management Platform - Backend API"
authors = [{ name = "Your Name", email = "you@example.com" }]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.1",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",
    "schemathesis==3.39.16",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.2",
    "pytest>=7.4.4",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=4.0.0",
]

[tool.ruff]
# Enable line length checks and other rules to match flake8 behavior
line-length = 100

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
]
ignore = []

[tool.ruff.format]
# Use the same line length for formatting

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["pytest-asyncio>=1.0.0", "ruff>=0.11.11", "pytest-cov>=4.0.0"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = ["asyncio: marks tests as async (deselect with '-m \"not asyncio\"')"]
filterwarnings = [
    "ignore::DeprecationWarning:schemathesis.*",
    "ignore:jsonschema.exceptions.RefResolutionError is deprecated:DeprecationWarning",
    "ignore:jsonschema.RefResolver is deprecated:DeprecationWarning",
]

[tool.hatch.build.targets.wheel]
# Force include main.py at the root of the project
# The key is the path on disk, the value is the path in the wheel.
force-include = { "main.py" = "main.py" }
